#include <Adafruit_NeoPixel.h>
//
#define PIN 8
#define STRIPSIZE 24
//
//// Parameter 1 = number of pixels in strip
//// Parameter 2 = pin number (most are valid)
//// Parameter 3 = pixel type flags, add together as needed:
////   NEO_KHZ800  800 KHz bitstream (most NeoPixel products w/WS2812 LEDs)
////   NEO_KHZ400  400 KHz (classic 'v1' (not v2) FLORA pixels, WS2811 drivers)
////   NEO_GRB     Pixels are wired for GRB bitstream (most NeoPixel products)
////   NEO_RGB     Pixels are wired for RGB bitstream (v1 FLORA pixels, not v2)
Adafruit_NeoPixel strip = Adafruit_NeoPixel(STRIPSIZE, PIN, NEO_GRB + NEO_KHZ800);

void setup() {
  // initialize led strip
  strip.begin();
  strip.setBrightness(10);  // Lower brightness and save eyeballs!
  strip.show(); // Initialize all pixels to 'off'
  // initialize the serial communication:
  Serial.begin(9600);
  pinMode(10, INPUT); // Setup for leads off detection LO +
  pinMode(11, INPUT); // Setup for leads off detection LO -
}

void loop() {
  if((digitalRead(10) == 1)||(digitalRead(11) == 1)){
    Serial.println('!');
  }
  else{
    // send the value of analog input 0:
      int readVal = analogRead(A0);
      // Digitally filter out excessive noise
      if(readVal > 590 || readVal < 150) {
        colorWipe(strip.Color(0, 0, 50));
      } else if(readVal > 400) {
        Serial.println(readVal);
        //// wait delay is measured in milliseconds
        colorWipe(strip.Color(155, 0, 0)); // Red
        //  colorWipe(strip.Color(0, 255, 0); // Green
      } else {
        Serial.println(readVal);
        colorWipe(strip.Color(0, 0, 50));
      }
  }
  //Wait for a bit to keep serial data from saturating
  delay(1);
}

 void colorWipe(uint32_t c) {
  for(uint16_t i=0; i<strip.numPixels(); i++) {
      strip.setPixelColor(i, c);
      strip.show();
  }
}
